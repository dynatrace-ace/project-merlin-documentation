"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[655],{1343:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return d},default:function(){return l}});var n=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],c={sidebar_position:2},s="2. Monaco configuration",m={unversionedId:"creating-a-template/Monaco-configuration",id:"creating-a-template/Monaco-configuration",isDocsHomePage:!1,title:"2. Monaco configuration",description:"Step 1: Create your Monaco configuration",source:"@site/docs/creating-a-template/2-Monaco-configuration.md",sourceDirName:"creating-a-template",slug:"/creating-a-template/Monaco-configuration",permalink:"/project-merlin-documentation/docs/creating-a-template/Monaco-configuration",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/creating-a-template/2-Monaco-configuration.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"1. Template structure",permalink:"/project-merlin-documentation/docs/creating-a-template/template-structure"},next:{title:"3. Wizard template creation",permalink:"/project-merlin-documentation/docs/creating-a-template/Template-creation"}},d=[],p={toc:d};function l(e){var a=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"2-monaco-configuration"},"2. Monaco configuration"),(0,o.kt)("h4",{id:"step-1-create-your-monaco-configuration"},"Step 1: Create your Monaco configuration"),(0,o.kt)("p",null,"First, all entities that shall be created in Dynatrace have to be defined. These entities will eventually be deployed by Monaco. For the sake of reusablitly, DynaWizard uses the same syntax. Start by creating a folder ",(0,o.kt)("em",{parentName:"p"},"monaco"),". This folder has to contain Dynatrace environment configuration (environment.yaml) and at a ",(0,o.kt)("em",{parentName:"p"},"projects")," subfolder with at least one project. Please refer to the ",(0,o.kt)("a",{parentName:"p",href:"https://dynatrace-oss.github.io/dynatrace-monitoring-as-code/configuration/configuration_structure"},"official Monaco documentation")," for more details."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"As of now, only a single configuration is supported per configuration type. This would NOT work:"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre"},"config:\n- sample2: sample2.json\n- sample3: sample3.json\n...\n")))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"There might be dependencies in some fields between configurations, please make sure to check for those before creating/updating the configs."))),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To update a static value in a monaco template: Go into Dynatrace UI and change the options to the desired state. Then, use the download process to get the latest configuration files and grab the new static value from the json file."))),(0,o.kt)("h4",{id:"step-2-parameterize-monaco-configuration"},"Step 2: Parameterize Monaco configuration"),(0,o.kt)("p",null,"Although any default Monaco configuration could in theory be applied, DynaWizard allows us to parameterize and therefore reuse configuration for multiple applications. Parameters, for which DynaWizard asks for input during an onboarding flow, have to be defined in ",(0,o.kt)("em",{parentName:"p"},"wizard.json"),' (See Step 3) and mapped in the according Monaco configuration type(s). Any value in a Monaco configuration type configuration yaml can be parameterized. It\'s as easy as wrapping a parameter id in double curly brackets: "{{ parameter_id }}". For example:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="config.yaml"',title:'"config.yaml"'},'config:\n- sample1: sample1.json\nsample1:\n- name: "{{ applicationName }}" // Instead of the name place a variable to use in the Dynatrace Wizard template\n- filter: "{{ teamName }}" // Another variable\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"An entity's name is also it's unique identifier. In case a template is re-applied and a name of a configuration-type's entity is changed, a new (duplicate) entity will be created. It is recommended that this behavior is communicated accordingly, for example by adding a note to any parameters that change an entity's name."))))}l.isMDXComponent=!0}}]);